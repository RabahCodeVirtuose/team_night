
# üìò **Sp√©cifications fonctionnelles & techniques ‚Äî TeamNight**

## üß≠ Objectif du projet

Cr√©er un **portail √©v√©nementiel en ligne** destin√© aux habitants de la Grande Kabylie, pour **organiser facilement des √©v√©nements (mariages, f√™tes)** en regroupant tous les services n√©cessaires : DJ, salle, g√¢teau, voiture, cam√©raman, mobilier, traiteur, etc.
Les utilisateurs pourront :

* Consulter des services par cat√©gorie
* Choisir un **pack cl√©-en-main** ou **composer un √©v√©nement personnalis√©**
* G√©rer un panier et obtenir un **devis automatique**
* R√©server, payer en ligne ou en point relais
* Gagner des points de fid√©lit√©
* Interagir via publications, commentaires, messages

---

## üß± Structure des entit√©s

---

### 1. **User**

Repr√©sente les utilisateurs inscrits (clients, admins, collaborateurs si besoin).

| Champ      | Type      | Description                           |
| ---------- | --------- | ------------------------------------- |
| id         | int       | Cl√© primaire                          |
| email      | string    | Email unique                          |
| password   | string    | Mot de passe hash√©                    |
| roles      | string\[] | R√¥les (ROLE\_USER, ROLE\_ADMIN, etc.) |
| nom        | string    | Nom                                   |
| prenom     | string    | Pr√©nom                                |
| telephone  | string    | Num√©ro de t√©l√©phone                   |
| isVerified | bool      | Compte v√©rifi√© ?                      |
| type       | string    | Type d‚Äôutilisateur (client/admin/‚Ä¶)   |

üß© Relations :

* 1\:N ‚Üí Adresse
* 1\:N ‚Üí ContactMessage
* 1\:N ‚Üí Conversation (client/admin)
* 1\:N ‚Üí Message
* 1\:N ‚Üí Reservation
* 1\:N ‚Üí Publication
* 1\:N ‚Üí Commentaire
* 1\:N ‚Üí Panier
* 1:1 ‚Üí Fidelite

---

### 2. **Adresse**

Adresse postale de l‚Äôutilisateur.

| Champ        | Type   |
| ------------ | ------ |
| id           | int    |
| rue          | string |
| ville        | string |
| codePostal   | string |
| pays         | string |
| fk\_user\_id | int    |

---

### 3. **Fidelite**

Syst√®me de fid√©lit√© par points.

| Champ        | Type   |
| ------------ | ------ |
| id           | int    |
| points       | int    |
| niveau       | string |
| fk\_user\_id | int    |

---

### 4. **Collaborateur**

Partenaire externe (loueur de voiture, salle, p√¢tissier, etc.).

| Champ        | Type   |
| ------------ | ------ |
| id           | int    |
| nom          | string |
| email        | string |
| telephone    | string |
| description  | text   |
| adresse      | string |
| isDisponible | bool   |
| noteGlobale  | float  |

üß© Relation :

* 1\:N ‚Üí Service

---

### 5. **Service**

Un service propos√© par un collaborateur (ex : DJ, salle, voiture...).

| Champ                 | Type   |
| --------------------- | ------ |
| id                    | int    |
| nom                   | string |
| description           | text   |
| categorie             | string |
| prixBase              | float  |
| isActif               | bool   |
| slug                  | string |
| fk\_collaborateur\_id | int    |

üß© Relation :

* 1\:N ‚Üí Media

---

### 6. **Pack**

Offre group√©e de services pr√©d√©finis (bronze, gold‚Ä¶).

| Champ        | Type   |
| ------------ | ------ |
| id           | int    |
| nom          | string |
| description  | text   |
| prix         | float  |
| isDisponible | bool   |
| slug         | string |

üß© Relation :

* N\:M ‚Üí Service via `Pack_Service`

---

### 7. **Pack\_Service**

Table pivot entre Pack et Service.

| Champ           | Type |
| --------------- | ---- |
| id              | int  |
| fk\_pack\_id    | int  |
| fk\_service\_id | int  |

---

### 8. **Panier**

√âv√©nement personnalis√© en cours de cr√©ation par l‚Äôutilisateur.

| Champ        | Type     |
| ------------ | -------- |
| id           | int      |
| dateCreation | datetime |
| statut       | string   |
| totalEstime  | float    |
| fk\_user\_id | int      |

üß© Relation :

* 1\:N ‚Üí Panier\_Service
* 1:1 ‚Üí Devis

---

### 9. **Panier\_Service**

Service ajout√© dans le panier.

| Champ           | Type  |
| --------------- | ----- |
| id              | int   |
| quantite        | int   |
| prixEstime      | float |
| fk\_panier\_id  | int   |
| fk\_service\_id | int   |

---

### 10. **Devis**

PDF g√©n√©r√© depuis le panier.

| Champ          | Type     |
| -------------- | -------- |
| id             | int      |
| dateCreation   | datetime |
| montantTotal   | float    |
| fichierPdf     | string   |
| statut         | string   |
| fk\_panier\_id | int      |

---

### 11. **CodePromo**

R√©duction via code promo.

| Champ                | Type     |
| -------------------- | -------- |
| id                   | int      |
| code                 | string   |
| reductionPourcentage | float    |
| dateExpiration       | datetime |
| utilisationMax       | int      |

---

### 12. **PaiementOption**

M√©thodes de paiement (Edahabia, point relais, carte‚Ä¶).

| Champ        | Type   |
| ------------ | ------ |
| id           | int    |
| nom          | string |
| description  | text   |
| isDisponible | bool   |

---

### 13. **Reservation**

√âv√©nement valid√©/r√©serv√©.

| Champ           | Type     |
| --------------- | -------- |
| id              | int      |
| dateReservation | datetime |
| commentaire     | text     |
| status          | string   |
| fk\_user\_id    | int      |
| fk\_event\_id   | int      |

---

### 14. **Reservation\_Prestation**

Table de lien entre r√©servation et services associ√©s.

| Champ               | Type |
| ------------------- | ---- |
| id                  | int  |
| fk\_reservation\_id | int  |
| fk\_prestation\_id  | int  |

---

### 15. **Paiement**

D√©tail du paiement.

| Champ               | Type     |
| ------------------- | -------- |
| id                  | int      |
| montant             | float    |
| methode             | string   |
| status              | string   |
| datePaiement        | datetime |
| fk\_reservation\_id | int      |

---

### 16. **Facture**

Facture PDF √©mise √† partir d‚Äôune r√©servation.

| Champ               | Type     |
| ------------------- | -------- |
| id                  | int      |
| numero              | string   |
| dateEmission        | datetime |
| montantTotal        | float    |
| fichierPdf          | string   |
| fk\_reservation\_id | int      |

---

### 17. **Event**

√âv√©nement concret (soir√©e DJ, mariage...).

| Champ        | Type     |
| ------------ | -------- |
| id           | int      |
| titre        | string   |
| description  | text     |
| categorie    | string   |
| date         | datetime |
| lieu         | string   |
| nbInvites    | int      |
| prixBase     | float    |
| isDisponible | bool     |
| slug         | string   |

---

### 18. **Publication**

Contenu (blog, actualit√©...).

| Champ         | Type     |
| ------------- | -------- |
| id            | int      |
| titre         | string   |
| contenu       | text     |
| categorie     | string   |
| slug          | string   |
| createdAt     | datetime |
| updatedAt     | datetime |
| isPublished   | bool     |
| fk\_user\_id  | int      |
| fk\_event\_id | int      |

---

### 19. **Commentaire**

R√©action d‚Äôun utilisateur √† une publication.

| Champ               | Type     |
| ------------------- | -------- |
| id                  | int      |
| contenu             | text     |
| createdAt           | datetime |
| isVisible           | bool     |
| fk\_user\_id        | int      |
| fk\_publication\_id | int      |

---

### 20. **Media**

Photo ou vid√©o.

| Champ               | Type   |
| ------------------- | ------ |
| id                  | int    |
| nom                 | string |
| fichier             | string |
| type                | string |
| ordre               | int    |
| fk\_event\_id       | int    |
| fk\_prestation\_id  | int    |
| fk\_publication\_id | int    |
| fk\_service\_id     | int    |

---

## ‚úÖ Prochaine √©tape

Tu peux commencer par cr√©er :

1. `User`
2. `Service`
3. `Collaborateur`
4. `Panier`

‚Ä¶et g√©n√©rer les entit√©s, relations et migrations petit √† petit. Si tu veux, je te donne un **plan de cr√©ation progressive** dans l‚Äôordre optimal pour Symfony + Doctrine. Dis-moi üëá
